apiVersion: v1
automountServiceAccountToken: false
kind: ServiceAccount
metadata:
  name: grafana-service-account
  namespace: xtdb-benchmark
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: xtdb-benchmark-pod-reader
rules:
  - apiGroups: [""]
    resources: ["pods"]
    verbs: ["list", "watch"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: xtdb-benchmark-pod-reader-binding
subjects:
  - kind: ServiceAccount
    name: grafana-service-account
    namespace: xtdb-benchmark
roleRef:
  kind: ClusterRole
  name: xtdb-benchmark-pod-reader
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: grafana-otel-config
  namespace: xtdb-benchmark
data:
  otelcol-config.yaml: |
    receivers:
      prometheus/collector:
        config:
          global:
            scrape_interval: 5s
          scrape_configs:
            - job_name: 'xtdb'
              metrics_path: /metrics
              authorization:
                credentials_file: /var/run/secrets/kubernetes.io/serviceaccount/token
              kubernetes_sd_configs:
              - role: pod

    processors:
      batch:

    exporters:
      otlphttp/metrics:
        endpoint: http://localhost:9090/api/v1/otlp
        tls:
          insecure: true

    service:
      pipelines:
        metrics:
          receivers: [prometheus/collector]
          processors: [batch]
          exporters: [otlphttp/metrics]
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: grafana-pvc
  namespace: xtdb-benchmark
spec:
  accessModes: ['ReadWriteOnce']
  resources:
    requests:
      storage: 10Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: grafana-deployment
  namespace: xtdb-benchmark
  labels:
    app: "grafana-deployment"
spec:
  replicas: 1
  selector:
    matchLabels:
      app: "grafana-deployment"
  template:
    metadata:
      labels:
        app: "grafana-deployment"
    spec:
      automountServiceAccountToken: true
      serviceAccountName: grafana-service-account
      containers:
        - name: grafana-deployment
          image: grafana/otel-lgtm:0.8.0 
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 3000
              name: http-grafana
              protocol: TCP
            - containerPort: 3100
              protocol: TCP
            - containerPort: 4317
              name: grpc-receiver
              protocol: TCP
            - containerPort: 4318
              name: http-receiver
            - containerPort: 9090
              name: prometheus
          resources:
            requests:
              cpu: 250m
              memory: 750Mi
          volumeMounts:
            - mountPath: /var/lib/grafana
              name: grafana-pv
            - mountPath: /otel-lgtm/otelcol-config.yaml
              name: config-volume
              subPath: otelcol-config.yaml 
          env:
          - name: ENABLE_LOGS_PROMETHEUS
            value: "true"
      volumes:
        - name: grafana-pv
          persistentVolumeClaim:
            claimName: grafana-pvc
        - name: config-volume
          configMap:
            name: grafana-otel-config
---
apiVersion: v1
kind: Service
metadata:
  name: grafana-service
  namespace: xtdb-benchmark
spec:
  type: LoadBalancer
  ports:
    - port: 3001
      protocol: TCP
      targetPort: http-grafana
  selector:
    app: grafana-deployment
